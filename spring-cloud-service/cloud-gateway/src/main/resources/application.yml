server:
  port: 10010
logging:
  level:
    cn.itcast: debug
  pattern:
    dateformat: MM-dd HH:mm:ss:SSS
spring:
  application:
    name: gateway
  redis:
    host: localhost
    port: 6379
    password:
  cloud:
    nacos:
      server-addr: ${wzy.nacos.server}:${wzy.nacos.port} # nacos地址
    gateway:
      routes:
        - id: user-service      # 路由标示，必须唯一
          uri: lb://userservice # 路由的目标地址
          predicates:           # 路由断言，判断请求是否符合规则
            - Path=/user/**     # 路径断言，判断路径是否是以/user开头，如果是则符合
        - id: order-service
          uri: lb://orderservice
          predicates:
            - Path=/order/**
          filters:
            # StripPrefix=1 表示网关转发到业务模块时候会自动截取前缀，
            # 比如 /hello/HiController/aaa后端匹配到的请求路径，
            # 就会变成http://localhost:8762/HiController/aaa
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1 # 令牌桶每秒填充速率
                redis-rate-limiter.burstCapacity: 2 # 令牌桶总容量
                key-resolver: "#{@pathKeyResolver}" # 使用 SpEL 表达式按名称引用 bean
      default-filters: # AddRequestHeader 可以让请求方法加上一个字符串，这样就可以通过请求注解 @RequestHeader 拿到这个值
        - AddRequestHeader=Truth,Itcast is freaking awesome!
        - AddRequestHeader=origin,gateway
      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOrigins: # 允许哪些网站的跨域请求
              - "http://localhost:8090"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期